extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  http_forwarder:
    ingress:
      endpoint: 0.0.0.0:6060
    egress:
      endpoint: "https://api.us1.signalfx.com"
  memory_ballast:
    size_mib: 500

receivers:
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      disk:
      filesystem:
      memory:
      network:
      load:
      paging:
      processes:
  signalfx:
    endpoint: 0.0.0.0:9943
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  prometheus/internal:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 10s
        static_configs:
        - targets: ['0.0.0.0:8888']
        metric_relabel_configs:
          - source_labels: [ __name__ ]
            regex: '.*grpc_io.*'
            action: drop
            
processors:
  batch:
  memory_limiter:
    check_interval: 2s
    limit_mib: 500
  resourcedetection:
    detectors: [gce, ecs, ec2, azure, system]
    override: true
    
exporters:
  signalfx:
    access_token: "<REDACTED>"
    api_url: "https://api.us1.signalfx.com"
    ingest_url: "https://ingest.us1.signalfx.com"
    sync_host_metadata: true
    correlation:
  logging:
    loglevel: debug

service:
  extensions: [health_check, http_forwarder, zpages, memory_ballast]
  pipelines:
    metrics:
      receivers: [hostmetrics, otlp, signalfx]
      processors: [memory_limiter, batch, resourcedetection]
      exporters: [signalfx]
    metrics/internal:
      receivers: [prometheus/internal]
      processors: [memory_limiter, batch, resourcedetection]
      exporters: [signalfx]
